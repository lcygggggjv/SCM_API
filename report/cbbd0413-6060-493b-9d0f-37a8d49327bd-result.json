{"name": "编辑物料全部用例", "status": "failed", "statusDetails": {"message": "AssertionError: 预期结果：BAD_USER_INPUT 不符合实际结果：{'updateScmMaterial': True}", "trace": "expected = 'BAD_USER_INPUT', actual = {'updateScmMaterial': True}\n\n    @staticmethod\n    def assert_actual(expected, actual):\n    \n        try:\n>           assert expected in actual\nE           AssertionError\n\nscm_api\\base_api.py:57: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scm_api.material_api.test_material.TestMaterial object at 0x000002598E535B10>, get_token = 'pX3NzbIAGJ3LNGIqRq6JOtOPDtQ14H0G'\nup_case = {'data': {'category_id': 'category_id', 'material_type': 'PURCHASE', 'name': 'asvdqwe4555623566777762asvdqwe4555623566777762asvdqwe4555623566777762', 'signal_id': 'signal_id', ...}, 'expected': 'BAD_USER_INPUT'}\nget_data = ('894b1ca8-fe1a-4483-b4c7-229f21b6422e', '4f328956-fe20-4a87-8129-e011542de156', '78b506b5-81c1-4523-9469-79436543a481', '76d5d62a-376e-45b0-8297-3cc971264c37')\n\n    @allure.title('编辑物料全部用例')\n    @pytest.mark.parametrize(\"up_case\", update_cases)\n    def test_update_material(self, get_token, up_case, get_data):\n    \n        cate_id2, unit_id2, signal_id2 = None, None, None\n    \n        if up_case['data']['category_id'] == 'category_id':\n            cate_id2 = get_data[0]\n        if up_case['data']['unit_id'] == 'unit_id':\n            unit_id2 = get_data[1]\n        if up_case['data']['signal_id'] == 'signal_id':\n            signal_id2 = get_data[2]\n    \n        if up_case[\"data\"][\"name\"] == \"name\":\n            name = self.mock.ran_py_str()\n        else:\n            name = up_case[\"data\"][\"name\"]\n    \n        res = requests.post(url=self.url + 'updateScmMaterial',\n                            headers={\"Authorization\": f\"bearer {get_token}\"},\n                            json={\n                              \"operationName\": \"updateScmMaterial\",\n                              \"variables\": {\n                                \"input\": {\n                                  \"category\": {\n                                    \"id\": cate_id2\n                                  },\n                                  \"figureNo\": self.mock.ran_py_str(),\n                                  \"id\": Api.get_create_material_id(),\n                                  \"inventoryUnit\": {\n                                    \"id\": unit_id2\n                                  },\n                                  \"materialQuality\": \"123\",\n                                  \"materialSignal\": {\n                                    \"id\": signal_id2\n                                  },\n                                  \"materialType\": up_case[\"data\"][\"material_type\"],\n                                  \"model\": self.mock.ran_py_str(),\n                                  \"name\": name,\n                                  \"specification\": self.mock.ran_py_str()\n                                }\n                              },\n                              \"query\": \"mutation updateScmMaterial($input: UpdateScmMaterialInput!)\"\n                                       \" {\\n  updateScmMaterial(input: $input)\\n}\"\n                            })\n    \n        resp = res.json()\n    \n        expected = up_case['expected']\n    \n        actual = self.review_actual(resp)\n>       self.assert_actual(expected, actual)\n\nscm_api\\material_api\\test_material.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected = 'BAD_USER_INPUT', actual = {'updateScmMaterial': True}\n\n    @staticmethod\n    def assert_actual(expected, actual):\n    \n        try:\n            assert expected in actual\n    \n            logger.info(f\"预期结果：{expected}, 符合实际结果:{actual}\")\n        except AssertionError:\n            logger.info(f\"预期结果：{expected}, 不符合实际结果:{actual}\")\n>           raise AssertionError(f\"预期结果：{expected} 不符合实际结果：{actual}\")\nE           AssertionError: 预期结果：BAD_USER_INPUT 不符合实际结果：{'updateScmMaterial': True}\n\nscm_api\\base_api.py:62: AssertionError"}, "parameters": [{"name": "up_case", "value": "{'data': {'name': 'asvdqwe4555623566777762asvdqwe4555623566777762asvdqwe4555623566777762', 'category_id': 'category_id', 'material_type': 'PURCHASE', 'unit_id': 'unit_id', 'signal_id': 'signal_id'}, 'expected': 'BAD_USER_INPUT'}"}], "start": 1692281503823, "stop": 1692281506605, "uuid": "d1709fff-ed4a-4176-96dc-acc0c03513e5", "historyId": "72cef74ab8835eb1b24333328c31e7bc", "testCaseId": "0406ead73ae6decd52207f2bd9130c86", "fullName": "scm_api.material_api.test_material.TestMaterial#test_update_material", "labels": [{"name": "parentSuite", "value": "scm_api.material_api"}, {"name": "suite", "value": "test_material"}, {"name": "subSuite", "value": "TestMaterial"}, {"name": "host", "value": "LAPTOP-GID304T1"}, {"name": "thread", "value": "11956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scm_api.material_api.test_material"}]}